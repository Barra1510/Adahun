//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.6.3
//     from Assets/Barrinha/Scripts/Input/PlayerActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerActions"",
    ""maps"": [
        {
            ""name"": ""PlayerMaps"",
            ""id"": ""d0d091dc-7f01-4aa6-a836-5622ece5fa28"",
            ""actions"": [
                {
                    ""name"": ""Movement1"",
                    ""type"": ""Value"",
                    ""id"": ""3e40d65a-e80d-400a-abdb-eaaecab63c55"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Movement2"",
                    ""type"": ""Value"",
                    ""id"": ""5b46ecc8-c673-4680-a1c4-363b77931125"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump1"",
                    ""type"": ""Button"",
                    ""id"": ""1abeb34f-daeb-4d6a-adb9-6594bd192281"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump2"",
                    ""type"": ""Button"",
                    ""id"": ""b8aea9ae-2767-433d-8dd7-aa719309beda"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Rapel1"",
                    ""type"": ""Value"",
                    ""id"": ""7768f019-df22-4560-86f5-820fe67cb50c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Rapel2"",
                    ""type"": ""Value"",
                    ""id"": ""faada5ae-8beb-4187-b26e-d0e447459c1e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""ASD"",
                    ""id"": ""7d47b2d3-2831-4dd7-9c22-0f6a4e3522c7"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement1"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""down"",
                    ""id"": ""8b3f4483-4c11-420e-9f23-2621b43e2659"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""8789ff4f-723c-43e8-a314-061f44646545"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""9f458ca8-7221-46e8-aa08-9a1d565d7de3"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Setas"",
                    ""id"": ""f6c08c96-a2a9-4f7f-b8cf-666d751a9da6"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement2"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""down"",
                    ""id"": ""4548cd2d-39f2-457e-8c1a-23dd6b7b028a"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC controller"",
                    ""action"": ""Movement2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""9d3e0e35-185a-4345-b3e2-e6176beb85c8"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC controller"",
                    ""action"": ""Movement2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""00b2aff7-1847-4a9c-b813-9ca665e5c84e"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC controller"",
                    ""action"": ""Movement2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""7419bd1a-1a35-4f6e-ae15-12a9950e1e73"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC controller"",
                    ""action"": ""Jump1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""44bc82f0-de7d-47e5-b2b8-4165709fc59a"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC controller"",
                    ""action"": ""Jump2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WS"",
                    ""id"": ""96f505c9-3e78-4292-ac42-51ff3824f0d8"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rapel1"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""down"",
                    ""id"": ""7e7b9cf3-63d8-44de-b9c1-c0c890250cae"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC controller"",
                    ""action"": ""Rapel1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""4ec581b2-8a3a-49c6-8c0a-d3ac08548b9e"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC controller"",
                    ""action"": ""Rapel1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Setas"",
                    ""id"": ""1275d745-bf35-4c75-83ed-3886e2544ccd"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rapel2"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""down"",
                    ""id"": ""fac4f7b8-b1d8-4f52-a87e-597d9b3f7948"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC controller"",
                    ""action"": ""Rapel2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""180f09c8-d58a-454a-9eec-bb5fba130fc1"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PC controller"",
                    ""action"": ""Rapel2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""PC controller"",
            ""bindingGroup"": ""PC controller"",
            ""devices"": []
        }
    ]
}");
        // PlayerMaps
        m_PlayerMaps = asset.FindActionMap("PlayerMaps", throwIfNotFound: true);
        m_PlayerMaps_Movement1 = m_PlayerMaps.FindAction("Movement1", throwIfNotFound: true);
        m_PlayerMaps_Movement2 = m_PlayerMaps.FindAction("Movement2", throwIfNotFound: true);
        m_PlayerMaps_Jump1 = m_PlayerMaps.FindAction("Jump1", throwIfNotFound: true);
        m_PlayerMaps_Jump2 = m_PlayerMaps.FindAction("Jump2", throwIfNotFound: true);
        m_PlayerMaps_Rapel1 = m_PlayerMaps.FindAction("Rapel1", throwIfNotFound: true);
        m_PlayerMaps_Rapel2 = m_PlayerMaps.FindAction("Rapel2", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerMaps
    private readonly InputActionMap m_PlayerMaps;
    private List<IPlayerMapsActions> m_PlayerMapsActionsCallbackInterfaces = new List<IPlayerMapsActions>();
    private readonly InputAction m_PlayerMaps_Movement1;
    private readonly InputAction m_PlayerMaps_Movement2;
    private readonly InputAction m_PlayerMaps_Jump1;
    private readonly InputAction m_PlayerMaps_Jump2;
    private readonly InputAction m_PlayerMaps_Rapel1;
    private readonly InputAction m_PlayerMaps_Rapel2;
    public struct PlayerMapsActions
    {
        private @PlayerActions m_Wrapper;
        public PlayerMapsActions(@PlayerActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement1 => m_Wrapper.m_PlayerMaps_Movement1;
        public InputAction @Movement2 => m_Wrapper.m_PlayerMaps_Movement2;
        public InputAction @Jump1 => m_Wrapper.m_PlayerMaps_Jump1;
        public InputAction @Jump2 => m_Wrapper.m_PlayerMaps_Jump2;
        public InputAction @Rapel1 => m_Wrapper.m_PlayerMaps_Rapel1;
        public InputAction @Rapel2 => m_Wrapper.m_PlayerMaps_Rapel2;
        public InputActionMap Get() { return m_Wrapper.m_PlayerMaps; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerMapsActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerMapsActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerMapsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerMapsActionsCallbackInterfaces.Add(instance);
            @Movement1.started += instance.OnMovement1;
            @Movement1.performed += instance.OnMovement1;
            @Movement1.canceled += instance.OnMovement1;
            @Movement2.started += instance.OnMovement2;
            @Movement2.performed += instance.OnMovement2;
            @Movement2.canceled += instance.OnMovement2;
            @Jump1.started += instance.OnJump1;
            @Jump1.performed += instance.OnJump1;
            @Jump1.canceled += instance.OnJump1;
            @Jump2.started += instance.OnJump2;
            @Jump2.performed += instance.OnJump2;
            @Jump2.canceled += instance.OnJump2;
            @Rapel1.started += instance.OnRapel1;
            @Rapel1.performed += instance.OnRapel1;
            @Rapel1.canceled += instance.OnRapel1;
            @Rapel2.started += instance.OnRapel2;
            @Rapel2.performed += instance.OnRapel2;
            @Rapel2.canceled += instance.OnRapel2;
        }

        private void UnregisterCallbacks(IPlayerMapsActions instance)
        {
            @Movement1.started -= instance.OnMovement1;
            @Movement1.performed -= instance.OnMovement1;
            @Movement1.canceled -= instance.OnMovement1;
            @Movement2.started -= instance.OnMovement2;
            @Movement2.performed -= instance.OnMovement2;
            @Movement2.canceled -= instance.OnMovement2;
            @Jump1.started -= instance.OnJump1;
            @Jump1.performed -= instance.OnJump1;
            @Jump1.canceled -= instance.OnJump1;
            @Jump2.started -= instance.OnJump2;
            @Jump2.performed -= instance.OnJump2;
            @Jump2.canceled -= instance.OnJump2;
            @Rapel1.started -= instance.OnRapel1;
            @Rapel1.performed -= instance.OnRapel1;
            @Rapel1.canceled -= instance.OnRapel1;
            @Rapel2.started -= instance.OnRapel2;
            @Rapel2.performed -= instance.OnRapel2;
            @Rapel2.canceled -= instance.OnRapel2;
        }

        public void RemoveCallbacks(IPlayerMapsActions instance)
        {
            if (m_Wrapper.m_PlayerMapsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerMapsActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerMapsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerMapsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerMapsActions @PlayerMaps => new PlayerMapsActions(this);
    private int m_PCcontrollerSchemeIndex = -1;
    public InputControlScheme PCcontrollerScheme
    {
        get
        {
            if (m_PCcontrollerSchemeIndex == -1) m_PCcontrollerSchemeIndex = asset.FindControlSchemeIndex("PC controller");
            return asset.controlSchemes[m_PCcontrollerSchemeIndex];
        }
    }
    public interface IPlayerMapsActions
    {
        void OnMovement1(InputAction.CallbackContext context);
        void OnMovement2(InputAction.CallbackContext context);
        void OnJump1(InputAction.CallbackContext context);
        void OnJump2(InputAction.CallbackContext context);
        void OnRapel1(InputAction.CallbackContext context);
        void OnRapel2(InputAction.CallbackContext context);
    }
}
